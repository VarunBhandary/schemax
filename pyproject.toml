[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "schemax"
version = "0.1.0"
description = "A CLI tool for declarative Databricks schema management using LLM-powered change generation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Schemax Team", email = "schemax@example.com"}
]
maintainers = [
    {name = "Schemax Team", email = "schemax@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
]
keywords = ["databricks", "unity-catalog", "schema", "cli", "llm", "dspy"]
requires-python = ">=3.11"
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "databricks-sdk>=0.12.0",
    "dspy-ai>=2.4.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    # Linting and formatting
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-import-order>=0.18.2",
    "flake8-bugbear>=23.0.0",
    "flake8-comprehensions>=3.12.0",
    "flake8-simplify>=0.20.0",
    "pylint>=2.17.0",
    "mypy>=1.4.0",
    
    # Security
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "semgrep>=1.32.0",
    
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    
    # Pre-commit and hooks
    "pre-commit>=3.3.0",
    
    # Documentation
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/VarunBhandary/schemax"
Repository = "https://github.com/VarunBhandary/schemax.git"
Documentation = "https://github.com/VarunBhandary/schemax#readme"
"Bug Tracker" = "https://github.com/VarunBhandary/schemax/issues"

[project.scripts]
schemax = "schemax.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["schemax*"]
exclude = ["tests*"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["schemax", "tests"]

# mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "databricks.*",
    "dspy.*",
    "yaml.*",
]
ignore_missing_imports = true

# pylint configuration
[tool.pylint.main]
load-plugins = [
    "pylint.extensions.docparams",
    "pylint.extensions.docstyle",
]

[tool.pylint.messages_control]
disable = [
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-locals",
    "import-error",
    "fixme",
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-parents = 10
max-attributes = 15
max-public-methods = 25

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=schemax",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# coverage configuration
[tool.coverage.run]
source = ["schemax"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# bandit security linter configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_in_subprocess for tests

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"] 